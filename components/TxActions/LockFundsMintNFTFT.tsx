import React, {useEffect, useState } from 'react';
import type { NextComponentType, NextPageContext } from "next";
import { Transaction, Asset } from '@meshsdk/core';
import { resolveDataHash } from '@meshsdk/core';
import type { Data } from '@meshsdk/core';
import { BrowserWallet } from '@meshsdk/core';
import {Card, Button} from '@web3uikit/core';
import { useLovelace } from '@meshsdk/react';
import { Action, PlutusScript } from '@meshsdk/core';
import { AssetMetadata, Mint } from '@meshsdk/core';

// Added window in scope for cardano component.
declare const window: any;

// Lock Script Address in Preprod Testnet (this is the contract I coded named LockScriptV2 in the backend associated repo)
const lockScriptAddress = 'addr_test1wrgzpjxkl3249pfsjgmv7mueautkt28kgx2xhehjqhxanecznac34'

// NOW. With Mesh we construct it in the following way.

const datumConstructor: Data = {
    alternative: 0,
    fields: [100000000, '85d4ddf3ab7b5711afc2324077b49f6c6efd9bd71dd4c63267e13d93'],
  };

// We also need a 'REDEEMER' for minting assets
// Think of this as the --redeemer-value-file unit.json that we include in the cardano-cli tx when minting assets.

const redeemer: Partial<Action> = {
    tag: 'MINT',
  }

// Token 1. NFT for identification

const nftAsset: Mint = {
    assetName: 'LockNFT',
    assetQuantity: '1',
    recipient: 'addr_test1qpyfg6h3hw8ffqpf36xd73700mkhzk2k7k4aam5jeg9zdmj6k4p34kjxrlgugcktj6hzp3r8es2nv3lv3quyk5nmhtqqexpysh'
  }

  // Used the following to serialize the parameterised NFT policy

//   NFTIdent.writeSerialisedScript  (Utils.unsafeReadTxOutRef $ "969798dbfe9af3662d2fb016425792e207f8f440c6926ac58f26b573526968d2#1") (Utils.unsafeReadAddress $ "addr_test1wrgzpjxkl3249pfsjgmv7mueautkt28kgx2xhehjqhxanecznac34")
//   WHich is a TxOutRef from one of the NAmi wallet utxos
// with policyID af8f3d786d09251869cc5c10771d93707c7fb5183c4e1c2ace46657e
const nftScriptSerial = '590adc590ad901000033323232332232323232323232323232323322323232323232323232323232323232323222335500e22232325335330053333573466e1cd55ce9baa0044800080a48c98c809ccd5ce0150148129999ab9a3370e6aae7540092000233221233001003002323232323232323232323232323333573466e1cd55cea8062400046666666666664444444444442466666666666600201a01801601401201000e00c00a00800600466a0460486ae854030cd408c090d5d0a80599a8118129aba1500a3335502775ca04c6ae854024ccd5409dd728131aba1500833502302f35742a00e666aa04e060eb4d5d0a8031919191999ab9a3370e6aae75400920002332212330010030023232323333573466e1cd55cea8012400046644246600200600466a074eb4d5d0a801181d9aba135744a004464c6407a66ae701000fc0ec4d55cf280089baa00135742a0046464646666ae68cdc39aab9d5002480008cc8848cc00400c008cd40e9d69aba15002303b357426ae8940088c98c80f4cd5ce02001f81d89aab9e5001137540026ae84d5d1280111931901c99ab9c03c03b037135573ca00226ea8004d5d0a80299a811bae35742a008666aa04e05840026ae85400cccd5409dd710009aba15002302e357426ae8940088c98c80d4cd5ce01c01b81989aba25001135744a00226ae8940044d5d1280089aba25001135744a00226ae8940044d5d1280089aba25001135744a00226aae7940044dd50009aba15002301e357426ae8940088c98c809ccd5ce015014812881409a804a4810350543500135573ca00226ea800488c8c8c94cd400840044098cc01d2411357726f6e6720616d6f756e74206d696e74656400533533500c3355500e233012001350042233335001232632029335738921024c680002b20012326320293357389201024c680002b2326320293357389201024c680002b2350012200233550123355500e335501255300f12001235001222335501e00300100932350012222222222220085002102522135002225335003133014001480088840accc0192401154e6f7420656e6f75676820414441204c6f636b656400533533550113355500d00823500122220033253350011350084901035054380022100233500b2323500122350082232335005233500425335333573466e3c0080040b80b45400c40b480b48cd401080b494cd4ccd5cd19b8f00200102e02d15003102d153350032153350022133500223350022335002233500223301c00200120302335002203023301c00200122203022233500420302225335333573466e1c01800c0cc0c854cd4ccd5cd19b8700500203303213301d00400110321032102b153350012102b102b350012222004323500122222222222200a500110242213500222253350041333573466e20005208087a70e02902a22102b13500122002225335001102113357380040402464c6403c66ae700040808cc0094044004c8004d5407c8894cd40044008884d400888cc01cccc02000801800400cc8004d5407888894cd40044008884d4008894cd4ccd5cd19b870014800008c0884ccc02001c01800c4ccc02001ccd405448ccc00402000c00801800c48cd54c00848004894cd4c00c0084cd403c00800440054038c8004d5407088448894cd40044008884cc014008ccd54c01c48004014010004444888c00cc008004c8004d540688844894cd400454038884cd403cc010008cd54c0184800401000488ccd5cd19b8700200101801722333573466e3c00800405c0584488c00800448c88c008dd6000990009aa80b911999aab9f0012500a233500930043574200460066ae8800805c8c8c8cccd5cd19b8735573aa004900011991091980080180118069aba150023005357426ae8940088c98c8054cd5ce00c00b80989aab9e5001137540024646464646666ae68cdc39aab9d5004480008cccc888848cccc00401401000c008c8c8c8cccd5cd19b8735573aa0049000119910919800801801180b1aba15002335010015357426ae8940088c98c8068cd5ce00e80e00c09aab9e5001137540026ae854010ccd54021d728039aba150033232323333573466e1d4005200423212223002004357426aae79400c8cccd5cd19b875002480088c84888c004010dd71aba135573ca00846666ae68cdc3a801a400042444006464c6403866ae7007c0780680640604d55cea80089baa00135742a00466a018eb8d5d09aba2500223263201633573803203002826ae8940044d5d1280089aab9e500113754002266aa002eb9d6889119118011bab00132001355014223233335573e0044a010466a00e66aa012600c6aae754008c014d55cf280118021aba20030151357420022244004244244660020080062244246600200600424464646666ae68cdc3a800a40004642446004006600a6ae84d55cf280191999ab9a3370ea0049001109100091931900819ab9c01301200e00d135573aa00226ea80048c8c8cccd5cd19b875001480188c848888c010014c01cd5d09aab9e500323333573466e1d400920042321222230020053009357426aae7940108cccd5cd19b875003480088c848888c004014c01cd5d09aab9e500523333573466e1d40112000232122223003005375c6ae84d55cf280311931900819ab9c01301200e00d00c00b135573aa00226ea80048c8c8cccd5cd19b8735573aa004900011991091980080180118029aba15002375a6ae84d5d1280111931900619ab9c00f00e00a135573ca00226ea80048c8cccd5cd19b8735573aa002900011bae357426aae7940088c98c8028cd5ce00680600409baa001232323232323333573466e1d4005200c21222222200323333573466e1d4009200a21222222200423333573466e1d400d2008233221222222233001009008375c6ae854014dd69aba135744a00a46666ae68cdc3a8022400c4664424444444660040120106eb8d5d0a8039bae357426ae89401c8cccd5cd19b875005480108cc8848888888cc018024020c030d5d0a8049bae357426ae8940248cccd5cd19b875006480088c848888888c01c020c034d5d09aab9e500b23333573466e1d401d2000232122222223005008300e357426aae7940308c98c804ccd5ce00b00a80880800780700680600589aab9d5004135573ca00626aae7940084d55cf280089baa0012323232323333573466e1d400520022333222122333001005004003375a6ae854010dd69aba15003375a6ae84d5d1280191999ab9a3370ea0049000119091180100198041aba135573ca00c464c6401866ae7003c0380280244d55cea80189aba25001135573ca00226ea80048c8c8cccd5cd19b875001480088c8488c00400cdd71aba135573ca00646666ae68cdc3a8012400046424460040066eb8d5d09aab9e500423263200933573801801600e00c26aae7540044dd500089119191999ab9a3370ea00290021091100091999ab9a3370ea00490011190911180180218031aba135573ca00846666ae68cdc3a801a400042444004464c6401466ae7003403002001c0184d55cea80089baa0012323333573466e1d40052002200623333573466e1d40092000200623263200633573801201000800626aae74dd5000a4c2440042440022400292103505431001123230010012233003300200200133512233002488120969798dbfe9af3662d2fb016425792e207f8f440c6926ac58f26b573526968d200480088848cc00400c0088004ccd4488944ccd44888cd4488cc008c0112211cd020c8d6fc555285309236cf6f99ef1765a8f641946be6f205cdd9e70050072212330010030022001212230020032122300100320011212230020031122001120011'


// Token. 2 Utility token , its amount is based on the 1:10 ADA ratio that is locked from the user. FOr every 10 ada user locks, can mint 1 utility token.


const utilityToken: Mint = {
    assetName: 'WizardToken',
    // the amount is fixed here, but the realistic scenario shoud be taking user input from a form type.
    assetQuantity: '666666',
    recipient: 'addr_test1qpyfg6h3hw8ffqpf36xd73700mkhzk2k7k4aam5jeg9zdmj6k4p34kjxrlgugcktj6hzp3r8es2nv3lv3quyk5nmhtqqexpysh'
  }

// Serialized with the LockFUnds script address, as a paratemer
// 
const utilitySerial = "590b17590b14010000332323232332232323232323232323232323322323232323232323232323232323222232325335332232533553355335300b3533530101200133355300a120012253353235001223500d2232335005233500425335333573466e3c0080040bc0b85400c40b880b88cd401080b894cd4ccd5cd19b8f00200102f02e15003102e153350032153350022133500223350022335002233500223301b00200120312335002203123301b00200122203122233500420312225335333573466e1c01800c0d00cc54cd4ccd5cd19b870050020340331333573466e1c0100040d00cc40cc40cc40b054cd4004840b040b0d400888880104cd406400800440054060d540048888888888880292000222200310242213500222253350041333573466e20cdc1800a4028a66a66aa60282400246a00244002666aa601e2400244a66a6602a6a004440046020012266a03c0040022002a03a66aa60282400205860206aa00c44444444444401026a02c9201035054380022100202902a22102b102513357389211d6e6f7420636f7272656374204144413a3a544f4b454e20726174696f6e0002415335533533355300a120012253355335330103500222002300b004102610271335019002001100150183355300f12001027300b3550012222222222220081024221350022253350031333573466e1c005200202902822102a1025133573892010d4e6f74204e465420666f756e64000241024135001220023333573466e1cd55ce9baa0044800080848c98c8084cd5ce01201080f9999ab9a3370e6aae7540092000233221233001003002323232323232323232323232323333573466e1cd55cea8062400046666666666664444444444442466666666666600201a01801601401201000e00c00a00800600466a03c03e6ae854030cd407807cd5d0a80599a80f0101aba1500a3335502275ca0426ae854024ccd54089d728109aba1500833501e02935742a00e666aa044054eb4d5d0a8031919191999ab9a3370e6aae75400920002332212330010030023232323333573466e1cd55cea8012400046644246600200600466a068eb4d5d0a801181a9aba135744a004464c6406e66ae700e80dc0d44d55cf280089baa00135742a0046464646666ae68cdc39aab9d5002480008cc8848cc00400c008cd40d1d69aba150023035357426ae8940088c98c80dccd5ce01d01b81a89aab9e5001137540026ae84d5d1280111931901999ab9c036033031135573ca00226ea8004d5d0a80299a80f3ae35742a008666aa04404c40026ae85400cccd54089d710009aba150023028357426ae8940088c98c80bccd5ce01901781689aba25001135744a00226ae8940044d5d1280089aba25001135744a00226ae8940044d5d1280089aba25001135744a00226aae7940044dd50009aba150023018357426ae8940088c98c8084cd5ce01201080f881009a8072490350543500135573ca00226ea80048d400488cccd40048c98c8078cd5ce249024c680001e200123263201e3357389201024c680001e23263201e3357389201024c680001e3200135501f2211222533500110022213300500233355300712001005004001233002500e0013200135501d222533500110022213500222330073330080020060010033200135501c22225335001100222135002225335333573466e1c005200002001f133300800700600313330080073350121233300100800300200600322333573466e3c008004064060c8004d540688844894cd400454034884cd4038c010008cd54c01848004010004c8004d54064884894cd4ccd5cd19b88001480000640604d40152401035054360015335002135005490103505437002215335333573466e1c00d200001b01a10021335300612001001337020069001091931900999ab9c0010131232230023758002640026aa030446666aae7c004940288cd4024c010d5d080118019aba2002014232323333573466e1cd55cea8012400046644246600200600460186ae854008c014d5d09aba2500223263201433573802e02802426aae7940044dd50009191919191999ab9a3370e6aae75401120002333322221233330010050040030023232323333573466e1cd55cea80124000466442466002006004602a6ae854008cd403c050d5d09aba2500223263201933573803803202e26aae7940044dd50009aba150043335500875ca00e6ae85400cc8c8c8cccd5cd19b875001480108c84888c008010d5d09aab9e500323333573466e1d4009200223212223001004375c6ae84d55cf280211999ab9a3370ea00690001091100191931900d99ab9c01e01b019018017135573aa00226ea8004d5d0a80119a805bae357426ae8940088c98c8054cd5ce00c00a80989aba25001135744a00226aae7940044dd5000899aa800bae75a224464460046eac004c8004d5405488c8cccd55cf80112804119a80399aa80c18031aab9d5002300535573ca00460086ae8800c0484d5d080088910010910911980080200189119191999ab9a3370ea0029000119091180100198029aba135573ca00646666ae68cdc3a801240044244002464c6402066ae7004c0400380344d55cea80089baa001232323333573466e1d400520062321222230040053007357426aae79400c8cccd5cd19b875002480108c848888c008014c024d5d09aab9e500423333573466e1d400d20022321222230010053007357426aae7940148cccd5cd19b875004480008c848888c00c014dd71aba135573ca00c464c6402066ae7004c04003803403002c4d55cea80089baa001232323333573466e1cd55cea80124000466442466002006004600a6ae854008dd69aba135744a004464c6401866ae7003c0300284d55cf280089baa0012323333573466e1cd55cea800a400046eb8d5d09aab9e500223263200a33573801a01401026ea80048c8c8c8c8c8cccd5cd19b8750014803084888888800c8cccd5cd19b875002480288488888880108cccd5cd19b875003480208cc8848888888cc004024020dd71aba15005375a6ae84d5d1280291999ab9a3370ea00890031199109111111198010048041bae35742a00e6eb8d5d09aba2500723333573466e1d40152004233221222222233006009008300c35742a0126eb8d5d09aba2500923333573466e1d40192002232122222223007008300d357426aae79402c8cccd5cd19b875007480008c848888888c014020c038d5d09aab9e500c23263201333573802c02602202001e01c01a01801626aae7540104d55cf280189aab9e5002135573ca00226ea80048c8c8c8c8cccd5cd19b875001480088ccc888488ccc00401401000cdd69aba15004375a6ae85400cdd69aba135744a00646666ae68cdc3a80124000464244600400660106ae84d55cf280311931900619ab9c00f00c00a009135573aa00626ae8940044d55cf280089baa001232323333573466e1d400520022321223001003375c6ae84d55cf280191999ab9a3370ea004900011909118010019bae357426aae7940108c98c8024cd5ce00600480380309aab9d50011375400224464646666ae68cdc3a800a40084244400246666ae68cdc3a8012400446424446006008600c6ae84d55cf280211999ab9a3370ea00690001091100111931900519ab9c00d00a008007006135573aa00226ea80048c8cccd5cd19b87500148008801c8cccd5cd19b87500248000801c8c98c8018cd5ce00480300200189aab9d37540029309000891001091000a490350543100235001222335500500300111221233001003002112323001001223300330020020013335122251333512223351223300230044891cd020c8d6fc555285309236cf6f99ef1765a8f641946be6f205cdd9e70050072212330010030022001212230020032122300100320011212230020031122001120011"

interface Props {}

const LockMint: NextComponentType<NextPageContext, {}, Props> = (
    props: Props
  ) => {

    const [walletApi, setWalletApi] = useState<any>();
    const [allUtxos, setUtxos]      = useState<any>();

    const fullTx = async () => {
        // connect to a wallet
        const wallet = await BrowserWallet.enable('nami');
        console.log(wallet, 'Here is the wallet.')
        const utxos = await wallet.getUtxos();
        console.log(utxos, 'Here utxoss.')
        if (wallet && utxos) {
            setWalletApi(wallet)
            setUtxos(utxos)
        } else {
            alert('Wrong wallet instance.')
        }
  }

  return (
    <div className="grid">
        <Button theme="translucent" type="button" text="Full Tx" onClick={fullTx}></Button>
    </div>
  )
  }

export default LockMint;